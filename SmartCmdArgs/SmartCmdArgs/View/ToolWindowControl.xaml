<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:SmartCmdArgs.View"
             xmlns:vs="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:c="clr-namespace:SmartCmdArgs.View.Converter"
             x:Class="SmartCmdArgs.View.ToolWindowControl"
             mc:Ignorable="d"
             Background="{DynamicResource vs:EnvironmentColors.ToolWindowBackgroundBrushKey}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignData ToolWindowViewModel}"
             x:Name="MyToolWindow">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="TreeViewStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <local:TreeViewEx x:Name="treeView"
                          Visibility="{Binding ShowLoadQuestion, Converter={c:BoolToVisibilityConverter Inverted=True, HideVisibility=Collapsed}}"
                          ItemsSource="{Binding TreeViewModel.TreeItemsView}"
                          SelectIndexCommand="{Binding TreeViewModel.SelectIndexCommand, Mode=OneWayToSource}"
                          SelectItemCommand="{Binding TreeViewModel.SelectItemCommand, Mode=OneWayToSource}"
                          Style="{StaticResource TreeViewVS}"
                          CopyCommand="{Binding CopySelectedItemsCommand}"
                          PasteCommand="{Binding PasteItemsCommand}"
                          UndoCommand="{Binding UndoCommand}"
                          RedoCommand="{Binding RedoCommand}"
                          ToggleSelectedCommand="{Binding ToggleSelectedCommand}"
                          CutCommand="{Binding CutItemsCommand}"
                          DeleteCommand="{Binding RemoveEntriesCommand}"
                          SplitArgumentCommand="{Binding SplitArgumentCommand}"
                          NewGroupFromArgumentsCommand="{Binding NewGroupFromArgumentsCommand}"
                          SetAsStartupProjectCommand="{Binding SetAsStartupProjectCommand}"
                          SetProjectConfigCommand="{Binding SetProjectConfigCommand}"
                          SetLaunchProfileCommand="{Binding SetLaunchProfileCommand}"
                          ToggleExclusiveModeCommand="{Binding ToggleExclusiveModeCommand}"
                          ToggleSpaceDelimiterCommand="{Binding ToggleSpaceDelimiterCommand}"
                          ToggleDefaultCheckedCommand="{Binding ToggleDefaultCheckedCommand}"
                          ResetToDefaultCheckedCommand="{Binding ResetToDefaultCheckedCommand}">
            <local:TreeViewEx.ItemContainerStyleSelector>
                <local:TreeItemStyleSelector ProjectItemStyle="{StaticResource ProjectItemStyle}"
                                            GroupItemStyle="{StaticResource GroupItemStyle}"
                                            ArgumentItemStyle="{StaticResource ArgumentItemStyle}" />
            </local:TreeViewEx.ItemContainerStyleSelector>
            <local:TreeViewEx.ItemTemplateSelector>
                <local:TreeDataTemplateSelector ProjectTemplate="{StaticResource ProjectDataTemplate}"
                                                GroupItemTemplate="{StaticResource GroupDataTemplate}"
                                                ArgumentItemTemplate="{StaticResource ArgumentDataTemplate}" />
            </local:TreeViewEx.ItemTemplateSelector>
        </local:TreeViewEx>

        <StackPanel Visibility="{Binding ShowLoadQuestion, Converter={c:BoolToVisibilityConverter Inverted=False, HideVisibility=Collapsed}}"
                    Orientation="Vertical"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center">
            <TextBlock TextWrapping="Wrap">
                It seems that this solution was never used with this extension.
                <LineBreak />
                You have the following options:
                <LineBreak />
                • Load existing arguments from projects
            </TextBlock>
            <TextBlock Visibility="Collapsed">
                • Create new arguments in the extension
            </TextBlock>
            <TextBlock Visibility="Visible">
                • Load existing arguments from the extensions json file
            </TextBlock>
            <StackPanel x:Name="ButtonsPanel" Orientation="Horizontal" Margin="0, 10, 0, 0">
                <Button x:Name="LoadFromProjectsBtn" Content="Load from Projects" Padding="5,0,5,0" Command="{Binding LoadArgumentsFromProjects}"/>
                <Button x:Name="CreateNewArgsBtn" Margin="10,0,0,0" Content="Create new arguments" Padding="5,0,5,0" Command="{Binding LoadArgumentsFromJson}" Visibility="Collapsed"/>
                <Button x:Name="LoadFromJsonBtn" Margin="10,0,0,0" Content="Use existing json files" Padding="5,0,5,0" Command="{Binding LoadArgumentsFromJson}" Visibility="Visible"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>